name: Stage Build - Updates

on:
  workflow_dispatch:
    inputs:
      notes:
        description: "Notes"
        required: false
        default: ""
  schedule:
    - cron: "0 0 * * *"

jobs:
  deploy-stage-updates:
    name: Deploy to stage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: updates

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          registry-url: "https://registry.npmjs.org/"
          cache: npm
      - run: npm ci
      - run: npm run updates rumba
      - name: Configure AWS credentials for stage
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.UPDATES_STAGE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.UPDATES_STAGE_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - run: aws s3 sync --acl public-read rumba-updates/ s3://updates-stage-developer-allizom-6d533edfe2c2c683/rumba-bcd-updates/

  trigger-stage-rumba-update-if-new:
    name: Trigger rumba updates if new release.
    needs: deploy-stage-updates
    runs-on: ubuntu-latest
    env:
      RUMBA_AUTH: ${{ secrets.RUMBA_STAGE_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - env:
          RUMBA_HOST: https://developer.allizom.org
          UPDATES_HOST: https://updates.developer.allizom.org
        run: . scripts/sync_rumba_updates.sh

      - name: Configure AWS credentials for stage
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.STAGE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGE_AWS_ACCESS_KEY_SECRET }}
          aws-region: us-west-2

      - name: Invalidate Stage API Updates CDN
        env:
          DISTRIBUTION: E2MLRMA1VTVDHX
          PATHS: /api/v2/updates/*
        run: aws cloudfront create-invalidation --distribution-id "$DISTRIBUTION" --paths "$PATHS"
